{"ast":null,"code":"/**\n * Utility functions for the Exhibit Curator app\n */\n\n/**\n * Function to determine period based on date and style\n * @param {number} dateStart - Start date of the artwork\n * @param {number} dateEnd - End date of the artwork  \n * @param {Array} styleTitles - Array of style titles from the API\n * @returns {string} The determined period\n */\nexport const determinePeriod = (dateStart, dateEnd, styleTitles) => {\n  if (styleTitles && styleTitles.length > 0) {\n    return styleTitles[0];\n  }\n  const year = dateStart || dateEnd;\n  if (!year) return 'Unknown Period';\n  if (year < 1400) return 'Medieval';\n  if (year < 1600) return 'Renaissance';\n  if (year < 1750) return 'Baroque';\n  if (year < 1850) return 'Neoclassical';\n  if (year < 1900) return 'Impressionist';\n  if (year < 1945) return 'Modern';\n  return 'Contemporary';\n};\n\n/**\n * Function to construct IIIF image URL from Art Institute of Chicago\n * @param {string} imageId - The image ID from the API\n * @returns {string|null} The constructed image URL or null if no imageId\n */\nexport const getImageUrl = imageId => {\n  if (!imageId) return null;\n  return `https://www.artic.edu/iiif/2/${imageId}/full/843,/0/default.jpg`;\n};\n\n/**\n * Async delay utility function\n * @param {number} ms - Milliseconds to delay\n * @returns {Promise} Promise that resolves after the delay\n */\nexport const delay = ms => {\n  return new Promise(resolve => setTimeout(resolve, ms));\n};\n\n/**\n * Fallback artwork data when API is unavailable\n */\nexport const fallbackArtworkData = [{\n  id: 1,\n  title: \"Title of Artwork\",\n  artist: \"First Last\",\n  year: \"XXXX\",\n  period: \"Modern\",\n  tags: [\"PERIOD\", \"POPULAR\"],\n  image_id: null\n}, {\n  id: 2,\n  title: \"Another Artwork\",\n  artist: \"Artist Name\",\n  year: \"YYYY\",\n  period: \"Contemporary\",\n  tags: [\"STYLE\", \"FEATURED\"],\n  image_id: null\n}, {\n  id: 3,\n  title: \"Third Piece\",\n  artist: \"Famous Artist\",\n  year: \"ZZZZ\",\n  period: \"Classical\",\n  tags: [\"HISTORIC\", \"RARE\"],\n  image_id: null\n}];\n\n/**\n * Default periods for fallback data\n */\nexport const fallbackPeriods = ['Modern', 'Contemporary', 'Classical'];","map":{"version":3,"names":["determinePeriod","dateStart","dateEnd","styleTitles","length","year","getImageUrl","imageId","delay","ms","Promise","resolve","setTimeout","fallbackArtworkData","id","title","artist","period","tags","image_id","fallbackPeriods"],"sources":["/Users/gilliannieh/exibit-curator/client/src/scripts/utils.js"],"sourcesContent":["/**\n * Utility functions for the Exhibit Curator app\n */\n\n/**\n * Function to determine period based on date and style\n * @param {number} dateStart - Start date of the artwork\n * @param {number} dateEnd - End date of the artwork  \n * @param {Array} styleTitles - Array of style titles from the API\n * @returns {string} The determined period\n */\nexport const determinePeriod = (dateStart, dateEnd, styleTitles) => {\n  if (styleTitles && styleTitles.length > 0) {\n    return styleTitles[0];\n  }\n  \n  const year = dateStart || dateEnd;\n  if (!year) return 'Unknown Period';\n  \n  if (year < 1400) return 'Medieval';\n  if (year < 1600) return 'Renaissance';\n  if (year < 1750) return 'Baroque';\n  if (year < 1850) return 'Neoclassical';\n  if (year < 1900) return 'Impressionist';\n  if (year < 1945) return 'Modern';\n  return 'Contemporary';\n};\n\n/**\n * Function to construct IIIF image URL from Art Institute of Chicago\n * @param {string} imageId - The image ID from the API\n * @returns {string|null} The constructed image URL or null if no imageId\n */\nexport const getImageUrl = (imageId) => {\n  if (!imageId) return null;\n  return `https://www.artic.edu/iiif/2/${imageId}/full/843,/0/default.jpg`;\n};\n\n/**\n * Async delay utility function\n * @param {number} ms - Milliseconds to delay\n * @returns {Promise} Promise that resolves after the delay\n */\nexport const delay = (ms) => {\n  return new Promise(resolve => setTimeout(resolve, ms));\n};\n\n/**\n * Fallback artwork data when API is unavailable\n */\nexport const fallbackArtworkData = [\n  { \n    id: 1, \n    title: \"Title of Artwork\", \n    artist: \"First Last\", \n    year: \"XXXX\", \n    period: \"Modern\", \n    tags: [\"PERIOD\", \"POPULAR\"], \n    image_id: null \n  },\n  { \n    id: 2, \n    title: \"Another Artwork\", \n    artist: \"Artist Name\", \n    year: \"YYYY\", \n    period: \"Contemporary\", \n    tags: [\"STYLE\", \"FEATURED\"], \n    image_id: null \n  },\n  { \n    id: 3, \n    title: \"Third Piece\", \n    artist: \"Famous Artist\", \n    year: \"ZZZZ\", \n    period: \"Classical\", \n    tags: [\"HISTORIC\", \"RARE\"], \n    image_id: null \n  }\n];\n\n/**\n * Default periods for fallback data\n */\nexport const fallbackPeriods = ['Modern', 'Contemporary', 'Classical'];\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,eAAe,GAAGA,CAACC,SAAS,EAAEC,OAAO,EAAEC,WAAW,KAAK;EAClE,IAAIA,WAAW,IAAIA,WAAW,CAACC,MAAM,GAAG,CAAC,EAAE;IACzC,OAAOD,WAAW,CAAC,CAAC,CAAC;EACvB;EAEA,MAAME,IAAI,GAAGJ,SAAS,IAAIC,OAAO;EACjC,IAAI,CAACG,IAAI,EAAE,OAAO,gBAAgB;EAElC,IAAIA,IAAI,GAAG,IAAI,EAAE,OAAO,UAAU;EAClC,IAAIA,IAAI,GAAG,IAAI,EAAE,OAAO,aAAa;EACrC,IAAIA,IAAI,GAAG,IAAI,EAAE,OAAO,SAAS;EACjC,IAAIA,IAAI,GAAG,IAAI,EAAE,OAAO,cAAc;EACtC,IAAIA,IAAI,GAAG,IAAI,EAAE,OAAO,eAAe;EACvC,IAAIA,IAAI,GAAG,IAAI,EAAE,OAAO,QAAQ;EAChC,OAAO,cAAc;AACvB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,WAAW,GAAIC,OAAO,IAAK;EACtC,IAAI,CAACA,OAAO,EAAE,OAAO,IAAI;EACzB,OAAO,gCAAgCA,OAAO,0BAA0B;AAC1E,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,KAAK,GAAIC,EAAE,IAAK;EAC3B,OAAO,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAEF,EAAE,CAAC,CAAC;AACxD,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMI,mBAAmB,GAAG,CACjC;EACEC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,kBAAkB;EACzBC,MAAM,EAAE,YAAY;EACpBX,IAAI,EAAE,MAAM;EACZY,MAAM,EAAE,QAAQ;EAChBC,IAAI,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC;EAC3BC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,iBAAiB;EACxBC,MAAM,EAAE,aAAa;EACrBX,IAAI,EAAE,MAAM;EACZY,MAAM,EAAE,cAAc;EACtBC,IAAI,EAAE,CAAC,OAAO,EAAE,UAAU,CAAC;EAC3BC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,aAAa;EACpBC,MAAM,EAAE,eAAe;EACvBX,IAAI,EAAE,MAAM;EACZY,MAAM,EAAE,WAAW;EACnBC,IAAI,EAAE,CAAC,UAAU,EAAE,MAAM,CAAC;EAC1BC,QAAQ,EAAE;AACZ,CAAC,CACF;;AAED;AACA;AACA;AACA,OAAO,MAAMC,eAAe,GAAG,CAAC,QAAQ,EAAE,cAAc,EAAE,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}